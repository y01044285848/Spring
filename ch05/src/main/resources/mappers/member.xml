<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    - namsespace값은 다른 mapper xml 파일과 구분될 수 있는 식별값을 지정
    - 보통 해당 mapper xml 파일명으로 지정
-->
<mapper namespace="kr.co.ch05.mapper.MemberMapper">

    <insert id="insertMember">
        INSERT INTO `member` VALUES (#{uid}, #{name}, #{hp}, #{pos}, #{dep}, NOW());
    </insert>

    <select id="selectMembers" resultType="kr.co.ch05.dto.MemberDTO">
        SELECT * FROM `member`
    </select>

    <select id="selectMembersForSearch" resultType="kr.co.ch05.dto.MemberDTO">
        SELECT * FROM `member`
        <where>
            <if test="type == 'uid' and value != ''">
                `uid` = #{value}
            </if>
            <if test="type == 'name' and value != ''">
                `name` = #{value}
            </if>
            <if test="type == 'hp' and value != ''">
                `hp` = #{value}
            </if>
            <if test="pos != null">
                AND `pos` IN
                <foreach item="item" collection="pos" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </select>

    <select id="selectMember" resultType="kr.co.ch05.dto.MemberDTO">
        SELECT * FROM `member` WHERE `uid`=#{uid};
    </select>

    <update id="updateMember">
        UPDATE `member` SET
        `name`=#{name},
        `hp`=#{hp},
        `pos`=#{pos},
        `dep`=#{dep}
        WHERE
        `uid`=#{uid};
    </update>

    <delete id="deleteMember">
        DELETE FROM `member` WHERE `uid`=#{uid};
    </delete>

    <!--
        resultMap
         - 데이터베이스 결과 집합을 사용자 정의 자바 객체로 매핑하는 태그
         - 테이블간의 1:1, 1:N 관계를 고려한 사용자 정의 데이터 구조
    -->
    <resultMap id="parentMap" type="kr.co.ch05.dto.ParentDTO">
        <result property="pid" column="pid"/>
        <result property="name" column="name"/>
        <result property="birth" column="birth"/>
        <result property="addr" column="addr"/>
        <collection property="childs" ofType="kr.co.ch05.dto.ChildDTO">
            <result property="cid" column="cid"/>
            <result property="name" column="name"/>
            <result property="hp" column="hp"/>
            <result property="parent" column="parent"/>
        </collection>
    </resultMap>

    <select id="selectParentWithChild" resultMap="parentMap">
        SELECT * FROM `parent` AS p
        JOIN `child` AS c
        ON p.pid = c.parent;
    </select>

</mapper>